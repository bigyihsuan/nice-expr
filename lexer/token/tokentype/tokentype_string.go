// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package tokentype

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Invalid-0]
	_ = x[EOF-1]
	_ = x[Integer-2]
	_ = x[Float-3]
	_ = x[String-4]
	_ = x[LeftBracket-5]
	_ = x[RightBracket-6]
	_ = x[LeftBrace-7]
	_ = x[RightBrace-8]
	_ = x[LeftParen-9]
	_ = x[RightParen-10]
	_ = x[Plus-11]
	_ = x[Minus-12]
	_ = x[Star-13]
	_ = x[Slash-14]
	_ = x[Percent-15]
	_ = x[PlusEqual-16]
	_ = x[MinusEqual-17]
	_ = x[StarEqual-18]
	_ = x[SlashEqual-19]
	_ = x[PercentEqual-20]
	_ = x[Equal-21]
	_ = x[Greater-22]
	_ = x[GreaterEqual-23]
	_ = x[Less-24]
	_ = x[LessEqual-25]
	_ = x[Comma-26]
	_ = x[Identifier-27]
	_ = x[Semicolon-28]
	_ = x[Underscore-29]
	_ = x[Var-30]
	_ = x[Const-31]
	_ = x[Set-32]
	_ = x[Is-33]
	_ = x[For-34]
	_ = x[Break-35]
	_ = x[Return-36]
	_ = x[Func-37]
	_ = x[Not-38]
	_ = x[If-39]
	_ = x[Else-40]
	_ = x[IntType-41]
	_ = x[FloatType-42]
	_ = x[StringType-43]
	_ = x[ListType-44]
	_ = x[MapType-45]
}

const _TokenType_name = "InvalidEOFIntegerFloatStringLeftBracketRightBracketLeftBraceRightBraceLeftParenRightParenPlusMinusStarSlashPercentPlusEqualMinusEqualStarEqualSlashEqualPercentEqualEqualGreaterGreaterEqualLessLessEqualCommaIdentifierSemicolonUnderscoreVarConstSetIsForBreakReturnFuncNotIfElseIntTypeFloatTypeStringTypeListTypeMapType"

var _TokenType_index = [...]uint16{0, 7, 10, 17, 22, 28, 39, 51, 60, 70, 79, 89, 93, 98, 102, 107, 114, 123, 133, 142, 152, 164, 169, 176, 188, 192, 201, 206, 216, 225, 235, 238, 243, 246, 248, 251, 256, 262, 266, 269, 271, 275, 282, 291, 301, 309, 316}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
