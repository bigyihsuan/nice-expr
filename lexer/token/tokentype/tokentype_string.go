// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package tokentype

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Invalid-0]
	_ = x[EOF-1]
	_ = x[Integer-2]
	_ = x[Float-3]
	_ = x[String-4]
	_ = x[LeftBracket-5]
	_ = x[RightBracket-6]
	_ = x[LeftBrace-7]
	_ = x[RightBrace-8]
	_ = x[LeftParen-9]
	_ = x[RightParen-10]
	_ = x[LeftTriangle-11]
	_ = x[RightTriangle-12]
	_ = x[Plus-13]
	_ = x[Minus-14]
	_ = x[Star-15]
	_ = x[Slash-16]
	_ = x[Percent-17]
	_ = x[PlusEqual-18]
	_ = x[MinusEqual-19]
	_ = x[StarEqual-20]
	_ = x[SlashEqual-21]
	_ = x[PercentEqual-22]
	_ = x[Equal-23]
	_ = x[Greater-24]
	_ = x[GreaterEqual-25]
	_ = x[Less-26]
	_ = x[LessEqual-27]
	_ = x[Identifier-28]
	_ = x[Comma-29]
	_ = x[Colon-30]
	_ = x[Semicolon-31]
	_ = x[Underscore-32]
	_ = x[Var-33]
	_ = x[Const-34]
	_ = x[Set-35]
	_ = x[Is-36]
	_ = x[For-37]
	_ = x[Break-38]
	_ = x[Return-39]
	_ = x[Func-40]
	_ = x[Not-41]
	_ = x[If-42]
	_ = x[Else-43]
	_ = x[IntType-44]
	_ = x[FloatType-45]
	_ = x[StringType-46]
	_ = x[ListType-47]
	_ = x[MapType-48]
}

const _TokenType_name = "InvalidEOFIntegerFloatStringLeftBracketRightBracketLeftBraceRightBraceLeftParenRightParenLeftTriangleRightTrianglePlusMinusStarSlashPercentPlusEqualMinusEqualStarEqualSlashEqualPercentEqualEqualGreaterGreaterEqualLessLessEqualIdentifierCommaColonSemicolonUnderscoreVarConstSetIsForBreakReturnFuncNotIfElseIntTypeFloatTypeStringTypeListTypeMapType"

var _TokenType_index = [...]uint16{0, 7, 10, 17, 22, 28, 39, 51, 60, 70, 79, 89, 101, 114, 118, 123, 127, 132, 139, 148, 158, 167, 177, 189, 194, 201, 213, 217, 226, 236, 241, 246, 255, 265, 268, 273, 276, 278, 281, 286, 292, 296, 299, 301, 305, 312, 321, 331, 339, 346}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
